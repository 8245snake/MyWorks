@using System.ComponentModel.DataAnnotations
@using System.Diagnostics
@using System.Runtime.CompilerServices
@using System.Security.Cryptography
@namespace MyWorkDashboard.Shared
@implements IDisposable

@*本文がない場合はポップアップを出さない*@
<DraggablePanel @bind-Y="@BarModel.Top" Style="@BarModel.BarStyle" Class="@($"time-bar time-bar-color {BarModel.AdditionalClass}")" 
                FixX GrabbingDelay="500" OnMouseDown="@BarModel.OnClick" Drop="@BarModel.OnDrop" Moved="Moved">
    <div>
        <p class="bar-text">@(BarModel.Duty.StartTime)～@(BarModel.Duty.EndTime) @BarModel.Duty.Title</p>
    </div>
</DraggablePanel>

<style>
    .time-bar {
        position: absolute;
        overflow: hidden;
    }

    .bar-text {
        color: black;
        font-size: 12px;
        opacity: 1.0;
        margin-top: 0px;
        margin-bottom: 0px;
    }
</style>

@code {

    [Parameter, Required]
    public DutyBar BarModel { get; set; }

    protected override void OnParametersSet()
    {
        BarModel.RedrawInvoked -= OnRedrawInvoked;
        BarModel.RedrawInvoked += OnRedrawInvoked;
    }


    private void OnRedrawInvoked(object? sender, EventArgs e)
    {
        StateHasChanged();
    }


    public void Dispose()
    {
        BarModel.RedrawInvoked -= OnRedrawInvoked;
    }

    private void Moved()
    {
        if (BarModel.TimeRows != null)
        {
            var start = BarModel.TimeRows.PixelToTime((int)BarModel.Top);
            BarModel.Duty.Shift(start);
        }
    }

}


